<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>28th CSP</title>
      <link href="/2023/03/05/28th-CSP/"/>
      <url>/2023/03/05/28th-CSP/</url>
      
        <content type="html"><![CDATA[<p>分享一份自己2月26日写的第28次CSP认证的代码。</p><p>暴力打满，可得385scores</p><hr><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-comment">/*第一题 现值域计算*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">int</span> n;<br><span class="hljs-type">double</span> f[<span class="hljs-number">55</span>], sum, x;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>cin &gt;&gt; n &gt;&gt; x;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n + <span class="hljs-number">1</span>; i++) &#123;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lf&quot;</span>, &amp;f[i]);<br>sum += (f[i] / <span class="hljs-built_in">pow</span>(<span class="hljs-number">1</span> + x, i - <span class="hljs-number">1</span>));<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%f&quot;</span>, sum);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-comment">/*第二题 训练计划*/</span><br><span class="hljs-comment">//拓扑排序</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">105</span>;<br><span class="hljs-type">int</span> n, m, p[N], t[N];<br><span class="hljs-type">int</span> cost[N];<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-comment">//输入</span><br>cin &gt;&gt; n &gt;&gt; m;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= m; i++) cin &gt;&gt; p[i];<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= m; i++) cin &gt;&gt; t[i];<br><span class="hljs-comment">//求解第一问</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= m; i++) &#123;<br><span class="hljs-keyword">if</span> (p[i]) cost[i] = cost[p[i]] + t[p[i]];<br><span class="hljs-keyword">else</span> cost[i] = <span class="hljs-number">1</span>;<br>cout &lt;&lt; cost[i] &lt;&lt; <span class="hljs-string">&quot; &quot;</span>;<br>&#125;<br>cout &lt;&lt; endl;<br><span class="hljs-comment">//求解第二问</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= m; i++) cost[i] = <span class="hljs-number">1e9</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = m; i &gt;= <span class="hljs-number">1</span>; i--) &#123;<br>cost[i] = <span class="hljs-built_in">min</span>(cost[i], n - t[i] + <span class="hljs-number">1</span>);<br>cost[p[i]] = <span class="hljs-built_in">min</span>(cost[p[i]], cost[i] - t[p[i]]);<br>&#125;<br><span class="hljs-type">bool</span> flag = <span class="hljs-literal">true</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= m; i++)<br><span class="hljs-keyword">if</span> (cost[i] &lt;= <span class="hljs-number">0</span>) &#123;<br>flag = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">if</span> (flag)<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= m; i++)<br>cout &lt;&lt; cost[i] &lt;&lt; <span class="hljs-string">&quot; &quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-comment">/*第三题 JPEG 解码*/</span><br><span class="hljs-comment">//简单模拟 扫描数据可详细看CSP 201412-2 Z字形扫描</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">double</span> Q[<span class="hljs-number">8</span>][<span class="hljs-number">8</span>], M[<span class="hljs-number">8</span>][<span class="hljs-number">8</span>], N[<span class="hljs-number">8</span>][<span class="hljs-number">8</span>], scan[<span class="hljs-number">70</span>];<br><span class="hljs-type">int</span> n, T;<br><span class="hljs-type">double</span> pi;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">print</span><span class="hljs-params">(<span class="hljs-type">double</span> x[][<span class="hljs-number">8</span>])</span> </span>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++) &#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">8</span>; j++)<br>cout &lt;&lt; x[i][j] &lt;&lt; <span class="hljs-string">&quot; &quot;</span>;<br>cout &lt;&lt; endl;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">fill</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-type">int</span> now = <span class="hljs-number">0</span>, state = <span class="hljs-number">1</span>, x = <span class="hljs-number">0</span>, y = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">while</span> (now &lt; <span class="hljs-number">64</span>) &#123;<br>M[x][y] = scan[now];<br>now++;<br><span class="hljs-keyword">if</span> (x == <span class="hljs-number">0</span> || x == <span class="hljs-number">7</span> || y == <span class="hljs-number">0</span> || y == <span class="hljs-number">7</span>) &#123; <span class="hljs-comment">//是边界</span><br><span class="hljs-keyword">if</span> (x == <span class="hljs-number">0</span>) &#123;<br><span class="hljs-keyword">if</span> (y % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>) x++, y--, state = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">else</span> y++;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (x == <span class="hljs-number">7</span>) &#123;<br><span class="hljs-keyword">if</span> (y % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>) x--, y++, state = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span> y++;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (y == <span class="hljs-number">0</span>) &#123;<br><span class="hljs-keyword">if</span> (x % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>) x++;<br><span class="hljs-keyword">else</span> x--, y++, state = <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (y == <span class="hljs-number">7</span>) &#123;<br><span class="hljs-keyword">if</span> (x % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>) x++;<br><span class="hljs-keyword">else</span> x++, y--, state = <span class="hljs-number">1</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (state == <span class="hljs-number">1</span>) x++, y--; <span class="hljs-comment">//左下</span><br><span class="hljs-keyword">else</span> x--, y++; <span class="hljs-comment">//右上</span><br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">adjust</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++)<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">8</span>; j++)<br>M[i][j] *= Q[i][j];<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">DCT</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++) &#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">8</span>; j++) &#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> u = <span class="hljs-number">0</span>; u &lt; <span class="hljs-number">8</span>; u++) &#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> v = <span class="hljs-number">0</span>; v &lt; <span class="hljs-number">8</span>; v++) &#123;<br><span class="hljs-type">double</span> a = <span class="hljs-number">1</span>, b = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">if</span> (u == <span class="hljs-number">0</span>) a = <span class="hljs-built_in">sqrt</span>(<span class="hljs-number">0.5</span>);<br><span class="hljs-keyword">if</span> (v == <span class="hljs-number">0</span>) b = <span class="hljs-built_in">sqrt</span>(<span class="hljs-number">0.5</span>);<br><span class="hljs-comment">//cout &lt;&lt; a &lt;&lt; &quot; &quot; &lt;&lt; b &lt;&lt; endl;</span><br>N[i][j] += <span class="hljs-number">0.25</span> * a * b * M[u][v] * <span class="hljs-built_in">cos</span>(pi / <span class="hljs-number">8</span> * ((<span class="hljs-type">double</span>)i + <span class="hljs-number">0.5</span>) * (<span class="hljs-type">double</span>)u) * <span class="hljs-built_in">cos</span>(pi / <span class="hljs-number">8</span> * ((<span class="hljs-type">double</span>)j + <span class="hljs-number">0.5</span>) * (<span class="hljs-type">double</span>)v);<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-comment">//print(N);</span><br><span class="hljs-comment">//cout &lt;&lt; endl &lt;&lt; endl;</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">8</span>;i++)<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">8</span>; j++)<br>&#123;<br>N[i][j] += <span class="hljs-number">128</span>;<br>N[i][j] = (<span class="hljs-type">int</span>)(N[i][j] + <span class="hljs-number">0.5</span>);<br><span class="hljs-keyword">if</span> (N[i][j] &gt; <span class="hljs-number">255</span>) N[i][j] = <span class="hljs-number">255</span>;<br><span class="hljs-keyword">if</span> (N[i][j] &lt; <span class="hljs-number">0</span>) N[i][j] = <span class="hljs-number">0</span>;<br>&#125;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++)<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">8</span>; j++)<br>cin &gt;&gt; Q[i][j];<br><span class="hljs-comment">//print(Q);</span><br>cin &gt;&gt; n &gt;&gt; T;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>cin &gt;&gt; scan[i];<br><span class="hljs-comment">//cout &lt;&lt; endl;</span><br><span class="hljs-keyword">if</span> (T == <span class="hljs-number">0</span>) &#123;<br><span class="hljs-built_in">fill</span>();<br><span class="hljs-built_in">print</span>(M);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (T == <span class="hljs-number">1</span>) &#123;<br><span class="hljs-built_in">fill</span>();<br><span class="hljs-built_in">adjust</span>();<br><span class="hljs-built_in">print</span>(M);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-built_in">fill</span>();<br><span class="hljs-comment">//print(M);</span><br><span class="hljs-comment">//cout &lt;&lt; endl &lt;&lt; endl;</span><br><span class="hljs-built_in">adjust</span>();<br><span class="hljs-comment">//print(M);</span><br><span class="hljs-comment">//cout &lt;&lt; endl &lt;&lt; endl;</span><br>pi = <span class="hljs-built_in">acos</span>(<span class="hljs-number">-1</span>);<br><span class="hljs-built_in">DCT</span>();<br><span class="hljs-built_in">print</span>(N);<br>&#125;<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-comment">/*第四题 聚集方差*/</span><br><span class="hljs-comment">//纯暴力 得65分</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;algorithm&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> ll long long </span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">3e5</span> + <span class="hljs-number">5</span>;<br><span class="hljs-type">int</span> n, p[N];<br>ll a[N], ans[N];<br><br><span class="hljs-type">int</span> h[N], e[N], ne[N], idx;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span> </span>&#123;<br>e[idx] = b, ne[idx] = h[a], h[a] = idx++;<br>&#125;<br><br><span class="hljs-comment">//暴力做法</span><br><span class="hljs-function">vector&lt;ll&gt; <span class="hljs-title">get</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span> </span>&#123;<br>vector&lt;ll&gt;val;<br>val.<span class="hljs-built_in">push_back</span>(a[x]);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = h[x]; ~i; i = ne[i]) &#123;<br><span class="hljs-type">int</span> ver = e[i];<br>vector&lt;ll&gt;tmp = <span class="hljs-built_in">get</span>(ver);<br>val.<span class="hljs-built_in">insert</span>(val.<span class="hljs-built_in">end</span>(), tmp.<span class="hljs-built_in">begin</span>(), tmp.<span class="hljs-built_in">end</span>());<br>&#125;<br><span class="hljs-keyword">return</span> val;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span> </span>&#123;<br>vector&lt;ll&gt;val = <span class="hljs-built_in">get</span>(x);<br><span class="hljs-built_in">sort</span>(val.<span class="hljs-built_in">begin</span>(), val.<span class="hljs-built_in">end</span>());<br><span class="hljs-type">int</span> cnt = (<span class="hljs-type">int</span>)val.<span class="hljs-built_in">size</span>();<br><span class="hljs-keyword">if</span> (cnt == <span class="hljs-number">1</span>) ans[x] = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">else</span> &#123;<br>ll sum = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt;= cnt - <span class="hljs-number">1</span>; i++) &#123;<br><span class="hljs-keyword">if</span> (i == <span class="hljs-number">0</span>) sum += (val[<span class="hljs-number">1</span>] - val[<span class="hljs-number">0</span>]) * (val[<span class="hljs-number">1</span>] - val[<span class="hljs-number">0</span>]);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (i == cnt - <span class="hljs-number">1</span>) sum += (val[cnt - <span class="hljs-number">1</span>] - val[cnt - <span class="hljs-number">2</span>]) * (val[cnt - <span class="hljs-number">1</span>] - val[cnt - <span class="hljs-number">2</span>]);<br><span class="hljs-keyword">else</span> &#123;<br>ll delta = <span class="hljs-built_in">min</span>(val[i] - val[i - <span class="hljs-number">1</span>], val[i + <span class="hljs-number">1</span>] - val[i]);<br>sum += delta * delta;<br>&#125;<br>&#125;<br>ans[x] = sum;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">print</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)<br>cout &lt;&lt; ans[i] &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br><span class="hljs-built_in">memset</span>(h, <span class="hljs-number">-1</span>, <span class="hljs-keyword">sizeof</span> h);<br><br>cin &gt;&gt; n;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">2</span>; i &lt;= n; i++) cin &gt;&gt; p[i], <span class="hljs-built_in">add</span>(p[i], i);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) cin &gt;&gt; a[i];<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = n; i &gt;= <span class="hljs-number">1</span>; i--) <span class="hljs-built_in">solve</span>(i);<br><span class="hljs-built_in">print</span>();<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-comment">/*第五题 星际网络*/</span><br><span class="hljs-comment">//暴力 拆点+spfa最短路 得20分</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstring&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;queue&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> ll long long </span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">3005</span>, M = N * N;<br>ll mod = <span class="hljs-number">1e9</span> + <span class="hljs-number">7</span>;<br><span class="hljs-type">int</span> n, m, l, r, a, b;<br>ll d[N][N], ans[N];<br><span class="hljs-type">int</span> h[N], e[M], ne[M], idx;<br>ll w[M];<br><span class="hljs-type">bool</span> vis[N];<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b, ll c)</span> </span>&#123;<br>e[idx] = b, ne[idx] = h[a], w[idx] = c, h[a] = idx++;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">spfa</span><span class="hljs-params">(<span class="hljs-type">int</span> s)</span> </span>&#123;<br><span class="hljs-built_in">memset</span>(vis, <span class="hljs-literal">false</span>, <span class="hljs-keyword">sizeof</span> vis);<br><span class="hljs-built_in">memset</span>(d[s], <span class="hljs-number">0x3f</span>, <span class="hljs-keyword">sizeof</span> d[s]);<br>d[s][s] = <span class="hljs-number">0</span>;<br>vis[s] = <span class="hljs-literal">true</span>;<br>queue&lt;<span class="hljs-type">int</span>&gt;q;<br>q.<span class="hljs-built_in">push</span>(s);<br><span class="hljs-keyword">while</span> (q.<span class="hljs-built_in">size</span>()) &#123;<br><span class="hljs-type">int</span> x = q.<span class="hljs-built_in">front</span>();<br>q.<span class="hljs-built_in">pop</span>();<br>vis[x] = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = h[x]; ~i; i = ne[i]) &#123;<br><span class="hljs-type">int</span> y = e[i], z = w[i];<br><span class="hljs-keyword">if</span> (d[s][y] &gt; d[s][x] + (ll)z) &#123;<br>d[s][y] = d[s][x] + (ll)z;<br><span class="hljs-keyword">if</span> (!vis[y]) &#123;<br>q.<span class="hljs-built_in">push</span>(y);<br>vis[y] = <span class="hljs-literal">true</span>;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);<br>cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br><span class="hljs-built_in">memset</span>(h, <span class="hljs-number">-1</span>, <span class="hljs-keyword">sizeof</span> h);<br>cin &gt;&gt; n &gt;&gt; m;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= m; i++) &#123;<br>cin &gt;&gt; l &gt;&gt; r;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = l; j &lt;= r; j++)<br><span class="hljs-built_in">add</span>(j, n + i, <span class="hljs-number">0</span>);<br>cin &gt;&gt; l &gt;&gt; r;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = l; j &lt;= r; j++)<br><span class="hljs-built_in">add</span>(n + m + i, j, <span class="hljs-number">0</span>);<br>cin &gt;&gt; a &gt;&gt; b;<br>ll len = a * <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, b);<br><span class="hljs-built_in">add</span>(n + i, n + m + i, len);<span class="hljs-comment">//建边</span><br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)<br><span class="hljs-built_in">spfa</span>(i);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">2</span>; i &lt;= n; i++) &#123;<br>ll check = <span class="hljs-number">0x3f3f3f3f3f3f3f3f</span>;<br><span class="hljs-keyword">if</span> (d[<span class="hljs-number">1</span>][i] == d[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>] || d[i][<span class="hljs-number">1</span>] == d[i][<span class="hljs-number">0</span>]) ans[i] = <span class="hljs-number">-1</span>;<br><span class="hljs-keyword">else</span> ans[i] = (d[<span class="hljs-number">1</span>][i] % mod + d[i][<span class="hljs-number">1</span>] % mod) % mod;<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">2</span>; i &lt;= n; i++)<br>cout &lt;&lt; ans[i] &lt;&lt; <span class="hljs-string">&quot; &quot;</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> CS1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>first_blog</title>
      <link href="/2023/03/04/first-blog/"/>
      <url>/2023/03/04/first-blog/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">#include&lt;iostream&gt;<br>using namespace std;<br>int main()&#123;<br>    cout &lt;&lt; &quot;Hello World!\n&quot;<br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 琐碎时光 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/03/04/hello-world/"/>
      <url>/2023/03/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
